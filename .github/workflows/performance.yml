name: Performance Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 4 * * 1' # Weekly on Monday at 4 AM UTC

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: |
        npm start &
        sleep 30 # Wait for server to start
      env:
        NODE_ENV: production
        DATABASE_URL: sqlite://./test.db
        SESSION_SECRET: test-secret
    
    - name: Run Lighthouse
      uses: treosh/lighthouse-ci-action@v12
      with:
        urls: |
          http://localhost:5000
        budgetPath: .lighthouserc.json
        uploadArtifacts: true
        temporaryPublicStorage: true
    
    - name: Comment PR with Lighthouse results
      uses: treosh/lighthouse-ci-action@v12
      if: github.event_name == 'pull_request'
      with:
        urls: |
          http://localhost:5000
        uploadArtifacts: true
        temporaryPublicStorage: true

  bundle-analysis:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Analyze bundle
      run: |
        npm install -g webpack-bundle-analyzer
        npm run build
        npx webpack-bundle-analyzer dist/assets/*.js --report --mode static --report-filename bundle-report.html
    
    - name: Upload bundle analysis
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: bundle-report.html

  load-testing:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install -g artillery
    
    - name: Start application
      run: |
        npm start &
        sleep 30
      env:
        NODE_ENV: production
        DATABASE_URL: sqlite://./test.db
        SESSION_SECRET: test-secret
    
    - name: Create load test config
      run: |
        cat > load-test.yml << EOF
        config:
          target: 'http://localhost:5000'
          phases:
            - duration: 60
              arrivalRate: 10
            - duration: 120
              arrivalRate: 50
            - duration: 60
              arrivalRate: 10
        scenarios:
          - name: 'Homepage load'
            requests:
              - get:
                  url: '/'
          - name: 'API health check'
            requests:
              - get:
                  url: '/api/health'
        EOF
    
    - name: Run load test
      run: artillery run load-test.yml --output load-test-results.json
    
    - name: Generate load test report
      run: artillery report load-test-results.json --output load-test-report.html
    
    - name: Upload load test results
      uses: actions/upload-artifact@v4
      with:
        name: load-test-results
        path: |
          load-test-results.json
          load-test-report.html