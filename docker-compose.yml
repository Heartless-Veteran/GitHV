version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: githv
      POSTGRES_USER: githv
      POSTGRES_PASSWORD: githv_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U githv -d githv"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage (optional)
  redis:
    image: redis:8-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # GitHV Application
  githv:
    build: .
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://githv:githv_password@postgres:5432/githv
      SESSION_SECRET: your-session-secret-change-this
      GITHUB_CLIENT_ID: your-github-client-id
      GITHUB_CLIENT_SECRET: your-github-client-secret
      GEMINI_API_KEY: your-gemini-api-key
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development version with hot reload
  githv-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://githv:githv_password@postgres:5432/githv
      SESSION_SECRET: dev-session-secret
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data: